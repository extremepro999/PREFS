"use strict";(self.webpackChunkprefs_docs=self.webpackChunkprefs_docs||[]).push([[641],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=r.createContext({}),d=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=d(n),h=l,k=p["".concat(o,".").concat(h)]||p[h]||s[h]||i;return n?r.createElement(k,a(a({ref:t},c),{},{components:n})):r.createElement(k,a({ref:t},c))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,a=new Array(i);a[0]=p;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u.mdxType="string"==typeof e?e:l,a[1]=u;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1391:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return c},default:function(){return p}});var r=n(7462),l=n(3366),i=(n(7294),n(3905)),a=["components"],u={id:"changelog",title:"Change log",hide_title:!0,sidebar_position:5},o="Change Log",d={unversionedId:"About/changelog",id:"About/changelog",isDocsHomePage:!1,title:"Change log",description:"v0.1.8 (31/07/2021)",source:"@site/docs/About/CHANGELOG.md",sourceDirName:"About",slug:"/About/changelog",permalink:" /next/About/changelog",editUrl:"https://github.com/Patitotective/PREFS/docs/About/CHANGELOG.md",version:"current",sidebarPosition:5,frontMatter:{id:"changelog",title:"Change log",hide_title:!0,sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Help",permalink:" /next/About/help"},next:{title:"License",permalink:" /next/About/license"}},c=[],s={toc:c};function p(e){var t=e.components,n=(0,l.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"change-log"},"Change Log"),(0,i.kt)("h4",{id:"v018-31072021"},"v0.1.8 (31/07/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fixed bug when creating a pref with an empty dictionary as value.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"v017-20072021"},"v0.1.7 (20/07/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"ConvertToPREFS()")," function (outside PRFS class) that do the same as ",(0,i.kt)("inlineCode",{parentName:"li"},"dumps()")," in json. Converts a dictionary into a PREFS file but instead of writting the PREFS in a file returns it as string."),(0,i.kt)("li",{parentName:"ul"},"Changed ",(0,i.kt)("inlineCode",{parentName:"li"},"ReadPrefs()")," function name (outside PREFS class) to ",(0,i.kt)("inlineCode",{parentName:"li"},"ReadPREFSFile()"),"."),(0,i.kt)("li",{parentName:"ul"},"Fixed issue when dictionary=True parameter, fixed issue when dictionary=True and interpret=True parameter.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"016-18072021"},"0.1.6 (18/07/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added ReadPrefs function outside PREFS class that reads a PREFS file and return it's value.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"014-16072021"},"0.1.4 (16/07/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fixed error when overwriting prefs and using a lambda function.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"013-11072021"},"0.1.3 (11/07/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added tree/cascade (nested dictionaries) support.")),(0,i.kt)("hr",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added docstring.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"0086-17062021"},"0.0.86 (17/06/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fixed path support, fixed ChangeFilename function, added debug parameter.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"0085-16062021"},"0.0.85 (16/06/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fixed little issues.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"0081-05062021"},"0.0.81 (05/06/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added dictionary write mode and support path file.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"0080-05062021"},"0.0.80 (05/06/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added ChangeFilename() function and ReWritePrefs() function.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"0065-04052021"},"0.0.65 (04/05/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Set max split as 1.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"006-04052021"},"0.0.6 (04/05/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Now you can choose your PREFS ender, line break is predetermined, remember don't put a character that is on your PREFS because program fails.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"0046-04052021"},"0.0.46 (04/05/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fixed error with lambda.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"0045-02052021"},"0.0.45 (02/05/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Now in class PREFS argument PREFS you must pass a lambda: function for not execute the function always, only when file is lost.")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"004-02052021"},"0.0.4 (02/05/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added python interpreter for pref values (using ast library)")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"003-02052021"},"0.0.3 (02/05/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name change")),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"002-01052021"},"0.0.2 (01/05/2021)"),(0,i.kt)("hr",null),(0,i.kt)("h4",{id:"001-01052021"},"0.0.1 (01/05/2021)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"First Release")))}p.isMDXComponent=!0}}]);
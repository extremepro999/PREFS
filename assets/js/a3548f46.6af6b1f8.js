"use strict";(self.webpackChunkprefs_docs=self.webpackChunkprefs_docs||[]).push([[750],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1873:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={id:"cli",title:"Command Line Interface",sidebar_position:1,hide_title:!0},p="Command Line Interface",s={unversionedId:"api/cli",id:"version-0.2.55/api/cli",isDocsHomePage:!1,title:"Command Line Interface",description:"PREFS has a simple CLI tool that you can access from your terminal right after installing PREFS via Pypi.",source:"@site/versioned_docs/version-0.2.55/api/cli.md",sourceDirName:"api",slug:"/api/cli",permalink:"/PREFS/docs/api/cli",editUrl:"https://github.com/Patitotective/PREFS/tree/main/website/versioned_docs/version-0.2.55/api/cli.md",tags:[],version:"0.2.55",sidebarPosition:1,frontMatter:{id:"cli",title:"Command Line Interface",sidebar_position:1,hide_title:!0},sidebar:"version-0.2.55/api",previous:{title:"Functions",permalink:"/PREFS/docs/api/functions"}},c=[{value:"Commands",id:"commands",children:[{value:"<code>bundle</code>",id:"bundle",children:[],level:3},{value:"<code>read_prefs_file</code>",id:"read_prefs_file",children:[],level:3},{value:"<code>convert_to_prefs</code>",id:"convert_to_prefs",children:[],level:3}],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"command-line-interface"},"Command Line Interface"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"PREFS")," has a simple CLI tool that you can access from your terminal right after installing ",(0,i.kt)("strong",{parentName:"p"},"PREFS")," via ",(0,i.kt)("em",{parentName:"p"},"Pypi"),"."),(0,i.kt)("h2",{id:"commands"},"Commands"),(0,i.kt)("h3",{id:"bundle"},(0,i.kt)("inlineCode",{parentName:"h3"},"bundle")),(0,i.kt)("p",null,"Bundle PREFS file into a PREFs resource to use to build your app."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See the ",(0,i.kt)("a",{parentName:"em",href:"/PREFS/docs/resources"},"usage instructions")," with a simple example.")),(0,i.kt)("p",null,"Arguments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"path (positional and required)"),": The path to the PREFS file to bundle."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-o --output (optional)"),": The output path for the PREFS resource file (by default the PREFS filename plus ",(0,i.kt)("inlineCode",{parentName:"li"},"_resource.py"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-a --alias (optional)"),": The alias for the file to be used in your Python module (by default the PREFS filename itself).")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"PREFS bundle settings.prefs --output Resources/resource.prefs --alias preferences.prefs \n")),(0,i.kt)("p",null,"It will create a PREFS resource file called ",(0,i.kt)("inlineCode",{parentName:"p"},"resource.prefs")," inside ",(0,i.kt)("inlineCode",{parentName:"p"},"Resources")," folder that can be accesed with ",(0,i.kt)("inlineCode",{parentName:"p"},"preferences.prefs")," alias:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'import PREFS\n\nsetttings = PREFS.read_prefs_file(":/preferences.prefs") # :/ and the alias\n')),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If some directory doesn't exist in the output path it creates it."))),(0,i.kt)("h3",{id:"read_prefs_file"},(0,i.kt)("inlineCode",{parentName:"h3"},"read_prefs_file")),(0,i.kt)("p",null,"Given the path of a PREFS file, reads it's content and print it."),(0,i.kt)("p",null,"Arguments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"path (positional and required)"),": The path to the PREFS file to bundle."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'-i --indent_char (optional, default="\\t")'),": The indentation character in the PREFS file.")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="settings.prefs"',title:'"settings.prefs"'},'#PREFS\ntheme="light"\nlang="en"\nkeybindings=>\n    Ctrl+D="Duplicate"\n    Ctrl+C="Copy"\n    Ctrl+V="Paste"\n    Ctrl+X="Cut"\n    Ctrl+Q="Quit"\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"PREFS read_prefs_file settings.prefs\n\n>>> {'theme': 'light', 'lang': 'en', 'keybindings': {'Copy': 'Ctrl+C', 'Paste': 'Ctrl+V', 'Cut': 'Ctrl+X'}}\n")),(0,i.kt)("h3",{id:"convert_to_prefs"},(0,i.kt)("inlineCode",{parentName:"h3"},"convert_to_prefs")),(0,i.kt)("p",null,"Given a dictionary as a string, prints it in PREFS format or writes the result into a file."),(0,i.kt)("p",null,"Arguments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"prefs (positional and required)"),": A dictionary as a string."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-o --output (optional, default=None)"),": The output path to write the result."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'-i --indent_char (optional, default="\\t")'),": The character to indent with.")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"PREFS convert_to_prefs \"{'theme': 'light', 'lang': 'en', 'keybindings': {'Copy': 'Ctrl+C', 'Paste': 'Ctrl+V', 'Cut': 'Ctrl+X'}}\" -o settings.prefs\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="settings.prefs"',title:'"settings.prefs"'},"#PREFS\ntheme='light'\nlang='en'\nkeybindings=>\n    Copy='Ctrl+C'\n    Paste='Ctrl+V'\n    Cut='Ctrl+X'\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If some directory doesn't exist in the output path it creates it."))))}d.isMDXComponent=!0}}]);
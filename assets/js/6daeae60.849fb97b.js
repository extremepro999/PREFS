"use strict";(self.webpackChunkprefs_docs=self.webpackChunkprefs_docs||[]).push([[89],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return k}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),d=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(n),k=i,m=c["".concat(u,".").concat(k)]||c[k]||s[k]||l;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var d=2;d<l;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5947:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return p},default:function(){return c}});var r=n(7462),i=n(3366),l=(n(7294),n(3905)),a=["components"],o={id:"changelog",title:"Change log",hide_title:!0,sidebar_position:5},u="Change Log",d={unversionedId:"About/changelog",id:"version-0.1.9/About/changelog",isDocsHomePage:!1,title:"Change log",description:"v0.1.9 (07/08/2021)",source:"@site/versioned_docs/version-0.1.9/About/CHANGELOG.md",sourceDirName:"About",slug:"/About/changelog",permalink:"/PREFS/About/changelog",editUrl:"https://github.com/Patitotective/PREFS/versioned_docs/version-0.1.9/About/CHANGELOG.md",version:"0.1.9",sidebarPosition:5,frontMatter:{id:"changelog",title:"Change log",hide_title:!0,sidebar_position:5},sidebar:"version-0.1.9/tutorialSidebar",previous:{title:"Help",permalink:"/PREFS/About/help"},next:{title:"License",permalink:"/PREFS/About/license"}},p=[],s={toc:p};function c(e){var t=e.components,n=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"change-log"},"Change Log"),(0,l.kt)("h4",{id:"v019-07082021"},"v0.1.9 (07/08/2021)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Changed all function names accord to PEP8:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.ReadPrefs")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.read_prefs")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.WritePrefs")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.write_prefs")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.OverWritePrefs")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.overwrite_prefs")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.ChangeFilename")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.change_filename")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.ConvertToJson")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.convert_to_json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ReadJsonFile")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"read_json_file")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ReadPREFSFile")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"read_prefs_file")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ConvertToPREFS")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"convert_to_prefs"))))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"PREFS.convert_to_yaml")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"read_yaml_file"),".")),(0,l.kt)("h4",{id:"v018-31072021"},"v0.1.8 (31/07/2021)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Fixed bug when creating a pref with an empty dictionary as value.")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"v017-20072021"},"v0.1.7 (20/07/2021)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"ConvertToPREFS()")," function (outside PRFS class) that do the same as ",(0,l.kt)("inlineCode",{parentName:"li"},"dumps()")," in json. Converts a dictionary into a PREFS file but instead of writing the PREFS in a file returns it as string."),(0,l.kt)("li",{parentName:"ul"},"Changed ",(0,l.kt)("inlineCode",{parentName:"li"},"ReadPrefs()")," function name (outside PREFS class) to ",(0,l.kt)("inlineCode",{parentName:"li"},"ReadPREFSFile()"),"."),(0,l.kt)("li",{parentName:"ul"},"Fixed issue when dictionary=True parameter, fixed issue when dictionary=True and interpret=True parameter.")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"016-18072021"},"0.1.6 (18/07/2021)"),(0,l.kt)("p",null,"Added ReadPrefs function outside PREFS class that reads a PREFS file and return it's value."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"014-16072021"},"0.1.4 (16/07/2021)"),(0,l.kt)("p",null,"Fixed error when overwriting prefs and using a lambda function."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"013-11072021"},"0.1.3 (11/07/2021)"),(0,l.kt)("p",null,"Added tree/cascade (nested dictionaries) support."),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Added docstring."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"0086-17062021"},"0.0.86 (17/06/2021)"),(0,l.kt)("p",null,"Fixed path support, fixed ChangeFilename function, added debug parameter."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"0085-16062021"},"0.0.85 (16/06/2021)"),(0,l.kt)("p",null,"Fixed little issues."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"0081-05062021"},"0.0.81 (05/06/2021)"),(0,l.kt)("p",null,"Added dictionary write mode and support path file."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"0080-05062021"},"0.0.80 (05/06/2021)"),(0,l.kt)("p",null,"Added ChangeFilename() function and ReWritePrefs() function."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"0065-04052021"},"0.0.65 (04/05/2021)"),(0,l.kt)("p",null,"Set max split as 1."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"006-04052021"},"0.0.6 (04/05/2021)"),(0,l.kt)("p",null,"Now you can choose your PREFS ender, line break is predetermined, remember don't put a character that is on your PREFS because program fails."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"0046-04052021"},"0.0.46 (04/05/2021)"),(0,l.kt)("p",null,"Fixed error with lambda."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"0045-02052021"},"0.0.45 (02/05/2021)"),(0,l.kt)("p",null,"Now in class PREFS argument PREFS you must pass a lambda: function for not execute the function always, only when file is lost."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"004-02052021"},"0.0.4 (02/05/2021)"),(0,l.kt)("p",null,"Added python interpreter for pref values (using ast library)"),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"003-02052021"},"0.0.3 (02/05/2021)"),(0,l.kt)("p",null,"Name change"),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"002-01052021"},"0.0.2 (01/05/2021)"),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"001-01052021"},"0.0.1 (01/05/2021)"),(0,l.kt)("p",null,"First Release"))}c.isMDXComponent=!0}}]);